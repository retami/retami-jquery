{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://retami/webpack/bootstrap","webpack://retami/webpack/runtime/global","webpack://retami/webpack/runtime/publicPath","webpack://retami/./public/app/timer.js","webpack://retami/./public/app/colorpicker.js","webpack://retami/./public/app/configModal.js","webpack://retami/./public/app/endModal.js","webpack://retami/./public/app/helpModal.js","webpack://retami/./public/app/board.js","webpack://retami/./public/app/secret.js","webpack://retami/./public/app/app.js","webpack://retami/./public/index.js","webpack://retami/./public/css/style.scss"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const Timer = (function () {\r\n    let timer = null;\r\n    let view = null;\r\n\r\n    function start(qualifier) {\r\n        const start = Date.now();\r\n        view = $(qualifier);\r\n        view.html('0');\r\n        timer = window.setInterval(function() {\r\n            view.html((Math.floor((Date.now() - start) / 1000)).toString() + \"s\");\r\n        }, 1000);\r\n    }\r\n\r\n    function stop() {\r\n        window.clearInterval(timer);\r\n    }\r\n\r\n    function getTime() {\r\n        return view.html()\r\n    }\r\n\r\n    return {\r\n        start: start,\r\n        stop: stop,\r\n        getTime: getTime\r\n    };\r\n})\r\n();\r\n\r\nexport default Timer;","const ColorPicker = (function () {\r\n\r\n    let selectedColorButton = null;\r\n    let callback = null;\r\n\r\n    function show(e) {\r\n        selectedColorButton = e.target;\r\n        let colorPicker = document.querySelector('.color-picker');\r\n        colorPicker.classList.toggle('visible');\r\n\r\n        let rect = selectedColorButton.getBoundingClientRect();\r\n        let viewport = window.visualViewport;\r\n\r\n        // https://developer.chrome.com/blog/visual-viewport-api/\r\n        colorPicker.style.top = Math.round(viewport.pageTop + rect.y + rect.height / 2) + 'px';\r\n        colorPicker.style.left = Math.round(viewport.pageLeft + rect.x + rect.width / 2) + 'px';\r\n\r\n        e.stopPropagation();\r\n    }\r\n\r\n    function init(colors, callbackArg = null) {\r\n        callback = callbackArg;\r\n        const colorpicker = document.createElement(\"div\");\r\n        colorpicker.classList.add(\"color-picker\");\r\n        for (let i = 1; i <= colors.length; i++) {\r\n            let coloroption = document.createElement(\"div\");\r\n            coloroption.classList.add(\"color-option\");\r\n            coloroption.classList.add(\"color-\" + i);\r\n            coloroption.style.backgroundColor = colors[i - 1];\r\n            let x = Math.floor(Math.cos(2 * (i - 1) / colors.length * Math.PI) * 40 - 17);\r\n            let y = Math.floor(Math.sin(2 * (i - 1) / colors.length * Math.PI) * 40 - 17);\r\n            coloroption.style.top = x + \"px\";\r\n            coloroption.style.left = y + \"px\";\r\n            coloroption.addEventListener('click', (e) => {\r\n                selectedColorButton.style.backgroundColor = window.getComputedStyle(e.target).backgroundColor;\r\n                colorpicker.classList.toggle('visible');\r\n                e.stopPropagation();\r\n            });\r\n            if (callback !== null) {\r\n                coloroption.addEventListener('click', callback);\r\n            }\r\n            colorpicker.appendChild(coloroption);\r\n        }\r\n\r\n        document.addEventListener('click', function (e) {\r\n            if (colorpicker.classList.contains('visible')) {\r\n                colorpicker.classList.toggle('visible');\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n\r\n        if (document.querySelector('.color-picker') !== null) {\r\n            document.querySelector('.color-picker').remove();\r\n        }\r\n        document.body.appendChild(colorpicker);\r\n    }\r\n\r\n    return {\r\n        init: function (colors, callback = null) {\r\n            init(colors, callback);\r\n        },\r\n        show: function (e) {\r\n            show(e);\r\n        }\r\n    };\r\n})\r\n();\r\n\r\nexport default ColorPicker;","const ConfigModal = (function () {\r\n\r\n    return {\r\n        callable: null,\r\n        bind(callable) {\r\n            this.callable = callable;\r\n        },\r\n        show: function(game) {\r\n            let config = $('.modal');\r\n            config.html(this.html(game));\r\n            config.css('display', 'block');\r\n            $('.modal-button').on('click', () => {\r\n                this.callable();\r\n                config.css('display', 'none');\r\n                $('.modal-button').off('click');\r\n            });\r\n        },\r\n        html: function(game) {\r\n            return `<div id='config-modal'>\r\n                <div id='config_dialog'>\r\n                <label id='colors_label'>Colors: </label>\r\n                <div id='config_colors_text'>${game.numberOfColors}</div>\r\n                <div id='config_colors_slider'></div>\r\n\r\n                <label id='pins_label'>Pins: </label>\r\n                <div id='config_pins_text'>${game.numberOfPins}</div>\r\n                <div id='config_pins_slider'></div>\r\n\r\n                <label id='guesses_label'>Guesses: </label>\r\n                <div id='config_guesses_text'>${game.maxAttempts}</div>\r\n                <div id='config_guesses_slider'></div>\r\n                <form>\r\n                <input type='hidden' value='${game.numberOfColors}' id='config_colors' />\r\n                <input type='hidden' value='${game.numberOfPins}' id='config_pins' />\r\n                <input type='hidden' value='${game.maxAttempts}' id='config_guesses' />\r\n                </form>\r\n                </div>\r\n                <div class=\"modal-button\">OK</div>\r\n                  <script>\r\n                  $( function() {\r\n                    $( \"#config_colors_slider\" ).slider({\r\n                      value: ${game.numberOfColors},\r\n                      min: 2,\r\n                      max: 7,\r\n                      step: 1,\r\n                      slide: function( event, ui ) {\r\n                        $( \"#config_colors\" ).val( ui.value );\r\n                        $( \"#config_colors_text\" ).text( ui.value );\r\n                      }\r\n                    });\r\n                  } );\r\n                  $( function() {\r\n                    $( \"#config_pins_slider\" ).slider({\r\n                      value: ${game.numberOfPins},\r\n                      min: 2,\r\n                      max: 5,\r\n                      step: 1,\r\n                      slide: function( event, ui ) {\r\n                        $( \"#config_pins\" ).val( ui.value );\r\n                        $( \"#config_pins_text\" ).text( ui.value );\r\n                      }\r\n                    });\r\n                  } );\r\n                  $( function() {\r\n                    $( \"#config_guesses_slider\" ).slider({\r\n                      value: ${game.maxAttempts},\r\n                      min: 2,\r\n                      max: 12,\r\n                      step: 1,\r\n                      slide: function( event, ui ) {\r\n                        $( \"#config_guesses\" ).val( ui.value );\r\n                        $( \"#config_guesses_text\" ).text( ui.value );\r\n                      }\r\n                    });\r\n                  } );\r\n                  </script>\r\n                </div>`;\r\n        }\r\n    };\r\n})\r\n();\r\n\r\nexport default ConfigModal;","const EndModal = (function () {\r\n\r\n    return {\r\n        wonHtml: `<div id=\"win-modal\">\r\n                        <div class=\"title\">You won!</div>\r\n                        <div class=\"content\">\r\n                            <div class=\"left\">\r\n                                Guesses:<br/>\r\n                                Time:<br/>\r\n                                Colors:<br/>\r\n                                Pins:<br/>\r\n                            </div>\r\n                            <div class=\"right\">\r\n                                <span id=\"score_guesses\"></span><br/>\r\n                                <span id=\"score_time\"></span><br/>\r\n                                <span id=\"score_colors\"></span><br/>\r\n                                <span id=\"score_pins\"></span><br/>\r\n                            </div>\r\n                        </div>\r\n                    </div>`,\r\n\r\n        won: function (attempts, colors, pins, time) {\r\n            let modal = $('.modal');\r\n            modal.html(this.wonHtml);\r\n\r\n            $('#score_guesses').html(attempts);\r\n            $('#score_colors').html(colors);\r\n            $('#score_pins').html(pins);\r\n            $('#score_time').html(time);\r\n\r\n            modal.css('display', 'block');\r\n            $(document).one('click', function (ev) {\r\n                modal.css('display', 'none');\r\n                ev.stopPropagation();\r\n            });\r\n        },\r\n\r\n        lostHtml: `<div id=\"lost-modal\">\r\n            <div class=\"title\">You lost!</div>\r\n            </div>`,\r\n\r\n        lost: function () {\r\n            let modal = $('.modal');\r\n            modal.html(this.lostHtml);\r\n            modal.css('display', 'block');\r\n            $(document).one('click', function (ev) {\r\n                modal.css('display', 'none');\r\n                ev.stopPropagation();\r\n            });\r\n        },\r\n\r\n        quitHtml: `<div id=\"quit-modal\">\r\n            <div class=\"title\">You quit!</div>\r\n            </div>`,\r\n\r\n        quit() {\r\n            let modal = $('.modal');\r\n            modal.html(this.quitHtml);\r\n            modal.css('display', 'block');\r\n            $(document).one('click', function (ev) {\r\n                modal.css('display', 'none');\r\n                ev.stopPropagation();\r\n            });\r\n        },\r\n    };\r\n})\r\n();\r\n\r\nexport default EndModal;","const HelpModal = (function () {\r\n\r\n    return {\r\n        helpHtml: `<div id=\"help-modal\">\r\n        <p >The goal of the game is to crack the code in as few attempts as possible.\r\n        The code is made up of 4 colors. Each color can be used multiple times. After each guess,\r\n        you will get feedback in the form of black and white pins. A black pin means that you have\r\n        guessed a color and its position correctly. A white pin means that you have guessed a color\r\n        correctly, but not its position. You can use the hint button to reveal one of the colors in\r\n        the code. Good luck!</p>\r\n        </div>`,\r\n\r\n        show: function(){\r\n            let modal = $('.modal');\r\n            modal.html(this.helpHtml);\r\n            modal.css('display', 'block');\r\n            $(document).one('click', function (ev) {\r\n                modal.css('display', 'none');\r\n                ev.stopPropagation();\r\n            });\r\n        },\r\n    };\r\n})\r\n();\r\n\r\nexport default HelpModal;","import Colorpicker from \"./colorpicker.js\";\r\nimport ConfigModal from \"./configModal.js\";\r\nimport EndModal from \"./endModal.js\";\r\nimport HelpModal from \"./helpModal.js\";\r\n\r\nexport default class Board {\r\n\r\n    hideable = {\r\n        qualifier: null,\r\n        show() {\r\n            $(this.qualifier).removeClass('hidden');\r\n        },\r\n\r\n        hide() {\r\n            $(this.qualifier).addClass('hidden');\r\n        },\r\n    }\r\n\r\n    disableable = {\r\n        __proto__: this.hideable,\r\n        qualifier: null,\r\n        callable: null,\r\n        active: true,\r\n\r\n        bind(callable) {\r\n            if (this.callable !== null) {\r\n                $(this.qualifier).off('click', this.callable);\r\n            }\r\n            this.callable = (e) => {\r\n                if (this.active) {\r\n                    callable(e);\r\n                }\r\n                e.stopPropagation();\r\n            }\r\n            $(this.qualifier).on('click', this.callable)\r\n        },\r\n\r\n        enable() {\r\n            this.active = true;\r\n            $(this.qualifier).removeClass('disabled');\r\n        },\r\n\r\n        disable() {\r\n            this.active = false;\r\n            $(this.qualifier).addClass('disabled');\r\n        },\r\n    }\r\n\r\n    secretHoles = {\r\n        init(numberOfPins) {\r\n            $(\".code-row\").html('');\r\n            for (let i = 0; i < numberOfPins; i++) {\r\n                $(\"<div>\", {\"class\": \"code-hole\"}).appendTo(\".code-row\");\r\n            }\r\n        },\r\n\r\n        set(secret) {\r\n            $(\".code-hole\").each(function (i) {\r\n                $(this).data('color', secret.get()[i]);\r\n            });\r\n        },\r\n\r\n        show() {\r\n            $(\".code-hole\").removeClass('covered').each(function () {\r\n                $(this).css('background-color', $(this).data('color'));\r\n            });\r\n        },\r\n\r\n        hide() {\r\n            $(\".code-hole\").addClass('covered');\r\n        },\r\n\r\n        hint() {\r\n            if (!this.toHint()) {\r\n                return;\r\n            }\r\n            let candidates = $('.code-hole.covered');\r\n            let randomIndex = Math.floor(Math.random() * candidates.length);\r\n            let candidate = candidates.eq(randomIndex);\r\n            candidate.css('background-color', candidate.data('color'));\r\n            candidate.removeClass('covered');\r\n        },\r\n\r\n        toHint() {\r\n            return $('.code-hole.covered').length > 1;\r\n        }\r\n    }\r\n\r\n    guessRow = {\r\n        initRows(numberOfRows, numberOfPins) {\r\n            $('#guesses').html('');\r\n            for (let i = 0; i < numberOfRows; i++) {\r\n                let guessRow = $(\"<div>\", {\"class\": \"guess-row\"}).appendTo(\"#guesses\");\r\n                let guessHoles = $(\"<div>\", {\"class\": \"guess-holes\"}).appendTo(guessRow);\r\n                let feedbackHoles = $(\"<div>\", {\"class\": \"feedback-holes\"}).appendTo(guessRow);\r\n                for (let i = 0; i < numberOfPins; i++) {\r\n                    $(\"<div>\", {\"class\": \"guess-hole\"}).appendTo(guessHoles).addClass('disabled');\r\n                    $(\"<div>\", {\"class\": \"feedback-hole\"}).appendTo(feedbackHoles);\r\n                    if (numberOfPins === 2 && i === 0 || numberOfPins === 3 && i === 1 ||\r\n                        numberOfPins === 4 && i === 1 || numberOfPins === 5 && i === 2 || numberOfPins === 6 && i === 2) {\r\n                        $(\"<div>\", {\"class\": \"feedback-spacer\"}).appendTo(feedbackHoles);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        enableNextRow() {\r\n            let current = $('.current');\r\n            if (current.length === 0) {\r\n                $('.guess-row:first').addClass('current');\r\n            } else {\r\n                current.removeClass('current');\r\n                current.next().addClass('current');\r\n            }\r\n            this.enable();\r\n        },\r\n\r\n        disableActiveRow() {\r\n            this.disable();\r\n            $('.current').removeClass('current');\r\n        },\r\n\r\n        getGuess() {\r\n            return $('.current .guess-hole').map(function () {\r\n                return $(this).css('background-color')\r\n            }).get();\r\n        },\r\n\r\n        disable() {\r\n            $('.current .guess-hole').off('click', Colorpicker.show).addClass('disabled');\r\n        },\r\n\r\n        enable() {\r\n            $('.current .guess-hole').on('click', Colorpicker.show).removeClass('disabled');\r\n        },\r\n\r\n        isFilled() {\r\n            return !this.getGuess().includes('rgba(0, 0, 0, 0)');\r\n        },\r\n\r\n        showFeedback(blackPins, whitePins) {\r\n            for (let feedback = $('.current .feedback-hole'), i = 0; i < blackPins + whitePins; i++) {\r\n                feedback.eq(i).addClass(i < blackPins ? 'black-feedback' : 'white-feedback');\r\n            }\r\n        }\r\n    }\r\n\r\n    helpButton = {__proto__: this.disableable, qualifier: '.help-button'};\r\n    hintButton = {__proto__: this.disableable, qualifier: '.hint-button'};\r\n    checkButton = {__proto__: this.disableable, qualifier: '.check-button'};\r\n    configButton = {__proto__: this.disableable, qualifier: '.config-button'};\r\n    quitButton = {__proto__: this.disableable, qualifier: '.quit-button'};\r\n    startButton = {__proto__: this.disableable, qualifier: '.start-button'};\r\n\r\n    playingInfo = {\r\n        __proto__: this.hideable,\r\n        qualifier: '.playing',\r\n        init() {\r\n            $('.playing').html('Playing... <span id=\"seconds\"></span>');\r\n        }\r\n    };\r\n\r\n    endModal = EndModal;\r\n    configModal = ConfigModal;\r\n    helpModal = HelpModal;\r\n\r\n    game = null;\r\n\r\n    constructor() {\r\n        this.helpButton.bind(() => this.helpModal.show());\r\n    }\r\n\r\n    init(game) {\r\n        this.game = game;\r\n        Colorpicker.init(this.game.getColors(), () => {\r\n            if (this.guessRow.isFilled()) {\r\n                this.checkButton.enable();\r\n            }\r\n        });\r\n        this.configButton.bind(() => this.configModal.show(this.game));\r\n        this.configButton.enable();\r\n        this.hintButton.disable();\r\n        this.quitButton.hide();\r\n        this.playingInfo.hide();\r\n        this.guessRow.initRows(this.game.maxAttempts, this.game.numberOfPins);\r\n        this.secretHoles.init(this.game.numberOfPins);\r\n    }\r\n\r\n    setStatePlaying(secret) {\r\n        this.secretHoles.hide();\r\n        this.guessRow.initRows(this.game.maxAttempts, this.game.numberOfPins);\r\n        this.guessRow.enableNextRow();\r\n        this.startButton.hide();\r\n        this.checkButton.disable();\r\n        this.checkButton.show();\r\n        this.hintButton.enable();\r\n        this.configButton.disable();\r\n        this.quitButton.show();\r\n        this.playingInfo.init();\r\n        this.playingInfo.show();\r\n        this.secretHoles.set(secret);\r\n    }\r\n\r\n    setStateGameOver() {\r\n        this.guessRow.disableActiveRow();\r\n        this.secretHoles.show();\r\n        this.checkButton.disable();\r\n        this.checkButton.hide();\r\n        this.hintButton.disable();\r\n        this.startButton.show();\r\n        this.configButton.enable();\r\n        this.quitButton.hide();\r\n        this.playingInfo.hide();\r\n    }\r\n}","const Secret = (function () {\r\n    let code = [];\r\n\r\n    function get() {\r\n        return code;\r\n    }\r\n\r\n    function set(code) {\r\n        code = this.code;\r\n    }\r\n\r\n    function generateSecret(colors, numberOfPins) {\r\n        code = [];\r\n        for (let i = 0; i < numberOfPins; i++) {\r\n            const randomIndex = Math.floor(Math.random() * colors.length);\r\n            code.push(colors[randomIndex]);\r\n        }\r\n    }\r\n\r\n    function checkGuess(guess) {\r\n        let blackPins = 0;\r\n        let whitePins = 0;\r\n        const secretCopy = [...code];\r\n        const guessCopy = [...guess];\r\n\r\n        // Check for black pins\r\n        for (let i = 0; i < guess.length; i++) {\r\n            if (guessCopy[i] === secretCopy[i]) {\r\n                blackPins++;\r\n                guessCopy[i] = null;\r\n                secretCopy[i] = null;\r\n            }\r\n        }\r\n\r\n        // Check for white pins\r\n        for (let i = 0; i < guess.length; i++) {\r\n            if (secretCopy[i] !== null) {\r\n                for (let j = 0; j < guess.length; j++) {\r\n                    if (guessCopy[j] !== null && guessCopy[j] === secretCopy[i]) {\r\n                        whitePins++;\r\n                        guessCopy[j] = null;\r\n                        secretCopy[i] = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return [blackPins, whitePins];\r\n    }\r\n\r\n    return {\r\n        get: get, // function () { return get() },\r\n        set: set,\r\n        generateSecret: function (colors, numberOfPins) {\r\n            generateSecret(colors, numberOfPins)\r\n        },\r\n        checkGuess: function (guess) {\r\n            return checkGuess(guess)\r\n        },\r\n    };\r\n})\r\n();\r\n\r\nexport default Secret;","import Timer from \"./timer.js\";\r\nimport Board from \"./board.js\";\r\nimport Secret from \"./secret.js\";\r\n\r\nconst App = (function () {\r\n    const colors = [\r\n        'rgb(244, 67, 54)',\r\n        'rgb(233, 30, 99)',\r\n        'rgb(156, 39, 176)',\r\n        'rgb(76, 175, 80)',\r\n        'rgb(255, 235, 59)',\r\n        'rgb(121, 85, 72)',\r\n        'rgb(33, 150, 243)',\r\n    ];\r\n\r\n    let game = {\r\n        numberOfColors: 5,\r\n        numberOfPins: 4,\r\n        maxAttempts: 7,\r\n        colors: colors,\r\n        getColors: function () {\r\n            return this.colors.slice(0, this.numberOfColors);\r\n        }\r\n    };\r\n\r\n    let attempts;\r\n    let board;\r\n    var secret = Secret;\r\n\r\n    function run() {\r\n        board = new Board();\r\n        board.init(game);\r\n        board.startButton.bind(handleStartClick);\r\n        board.checkButton.bind(handleCheckClick);\r\n        board.hintButton.bind(handleHintClick);\r\n        board.quitButton.bind(handleQuitClick);\r\n        board.configModal.bind(config);\r\n    }\r\n\r\n    function handleStartClick() {\r\n        attempts = 0;\r\n        secret.generateSecret(game.getColors(), game.numberOfPins);\r\n        board.setStatePlaying(secret);\r\n        Timer.start(\"#seconds\");\r\n    }\r\n\r\n    function handleCheckClick() {\r\n        const guess = board.guessRow.getGuess();\r\n\r\n        let [blackPins, whitePins] = secret.checkGuess(guess);\r\n        board.guessRow.showFeedback(blackPins, whitePins);\r\n        board.guessRow.disable();\r\n        board.checkButton.disable();\r\n        attempts++;\r\n\r\n        if (blackPins === game.numberOfPins || attempts === game.maxAttempts) {\r\n            endGame(blackPins === game.numberOfPins);\r\n            return;\r\n        }\r\n\r\n        board.guessRow.enableNextRow();\r\n    }\r\n\r\n    function handleHintClick() {\r\n        board.secretHoles.hint();\r\n        if(! board.secretHoles.toHint()) {\r\n            board.hintButton.disable();\r\n        }\r\n    }\r\n\r\n    function handleQuitClick() {\r\n        board.setStateGameOver();\r\n        Timer.stop();\r\n        board.endModal.quit();\r\n    }\r\n\r\n    function endGame(won) {\r\n        board.setStateGameOver();\r\n        Timer.stop();\r\n        if (won) {\r\n            board.endModal.won(attempts, game.numberOfColors, game.numberOfPins, Timer.getTime());\r\n        } else {\r\n            board.endModal.lost();\r\n        }\r\n    }\r\n\r\n    function config() {\r\n        game.numberOfColors = parseInt($('#config_colors').val());\r\n        game.numberOfPins = parseInt($('#config_pins').val());\r\n        game.maxAttempts = parseInt($('#config_guesses').val());\r\n        board.init(game);\r\n    }\r\n\r\n    return {\r\n        run: run,\r\n    };\r\n})\r\n();\r\n\r\nexport default App;","import App from \"./app/app.js\";\r\nApp.run();","export default __webpack_public_path__ + \"css/style.css\";"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","Timer","timer","view","start","qualifier","Date","now","$","html","setInterval","Math","floor","toString","stop","clearInterval","getTime","ColorPicker","selectedColorButton","callback","init","colors","arguments","undefined","colorpicker","createElement","classList","add","coloroption","style","backgroundColor","x","cos","PI","y","sin","top","left","addEventListener","getComputedStyle","target","toggle","stopPropagation","appendChild","contains","querySelector","remove","body","show","colorPicker","rect","getBoundingClientRect","viewport","visualViewport","round","pageTop","height","pageLeft","width","callable","bind","game","config","css","on","off","numberOfColors","numberOfPins","maxAttempts","wonHtml","won","attempts","pins","time","modal","one","ev","lostHtml","lost","quitHtml","quit","helpHtml","Board","hideable","removeClass","hide","addClass","disableable","__proto__","active","enable","disable","secretHoles","appendTo","set","secret","each","data","get","hint","toHint","candidates","randomIndex","random","candidate","eq","guessRow","initRows","numberOfRows","guessHoles","feedbackHoles","enableNextRow","current","next","disableActiveRow","getGuess","map","Colorpicker","isFilled","includes","showFeedback","blackPins","whitePins","feedback","helpButton","hintButton","checkButton","configButton","quitButton","startButton","playingInfo","endModal","EndModal","configModal","ConfigModal","helpModal","HelpModal","constructor","getColors","setStatePlaying","setStateGameOver","code","generateSecret","push","checkGuess","guess","secretCopy","guessCopy","j","board","slice","Secret","handleStartClick","handleCheckClick","handleHintClick","handleQuitClick","parseInt","val","run","App"],"sourceRoot":""}