!function(){"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),function(){var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var i=n.getElementsByTagName("script");if(i.length)for(var s=i.length-1;s>-1&&!e;)e=i[s--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e}(),function(){const t=function(){let t=null,e=null;return{start:function(n){const i=Date.now();e=$(n),e.html("0"),t=window.setInterval((function(){e.html(Math.floor((Date.now()-i)/1e3).toString()+"s")}),1e3)},stop:function(){window.clearInterval(t)},getTime:function(){return e.html()}}}();var e=t;const n=function(){let t=null,e=null;return{init:function(n){!function(n){e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const i=document.createElement("div");i.classList.add("color-picker");for(let s=1;s<=n.length;s++){let o=document.createElement("div");o.classList.add("color-option"),o.classList.add("color-"+s),o.style.backgroundColor=n[s-1];let l=Math.floor(40*Math.cos(2*(s-1)/n.length*Math.PI)-17),a=Math.floor(40*Math.sin(2*(s-1)/n.length*Math.PI)-17);o.style.top=l+"px",o.style.left=a+"px",o.addEventListener("click",(e=>{t.style.backgroundColor=window.getComputedStyle(e.target).backgroundColor,i.classList.toggle("visible"),e.stopPropagation()})),null!==e&&o.addEventListener("click",e),i.appendChild(o)}document.addEventListener("click",(function(t){i.classList.contains("visible")&&(i.classList.toggle("visible"),t.stopPropagation())})),null!==document.querySelector(".color-picker")&&document.querySelector(".color-picker").remove(),document.body.appendChild(i)}(n,arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)},show:function(e){!function(e){t=e.target;let n=document.querySelector(".color-picker");n.classList.toggle("visible");let i=t.getBoundingClientRect(),s=window.visualViewport;n.style.top=Math.round(s.pageTop+i.y+i.height/2)+"px",n.style.left=Math.round(s.pageLeft+i.x+i.width/2)+"px",e.stopPropagation()}(e)}}}();var i=n,s={callable:null,bind(t){this.callable=t},show:function(t){let e=$(".modal");e.html(this.html(t)),e.css("display","block"),$(".modal-button").on("click",(()=>{this.callable(),e.css("display","none"),$(".modal-button").off("click")}))},html:function(t){return`<div id='config-modal'>\n                <div id='config_dialog'>\n                <label id='colors_label'>Colors: </label>\n                <div id='config_colors_text'>${t.numberOfColors}</div>\n                <div id='config_colors_slider'></div>\n\n                <label id='pins_label'>Pins: </label>\n                <div id='config_pins_text'>${t.numberOfPins}</div>\n                <div id='config_pins_slider'></div>\n\n                <label id='guesses_label'>Guesses: </label>\n                <div id='config_guesses_text'>${t.maxAttempts}</div>\n                <div id='config_guesses_slider'></div>\n                <form>\n                <input type='hidden' value='${t.numberOfColors}' id='config_colors' />\n                <input type='hidden' value='${t.numberOfPins}' id='config_pins' />\n                <input type='hidden' value='${t.maxAttempts}' id='config_guesses' />\n                </form>\n                </div>\n                <div class="modal-button">OK</div>\n                  <script>\n                  $( function() {\n                    $( "#config_colors_slider" ).slider({\n                      value: ${t.numberOfColors},\n                      min: 2,\n                      max: 7,\n                      step: 1,\n                      slide: function( event, ui ) {\n                        $( "#config_colors" ).val( ui.value );\n                        $( "#config_colors_text" ).text( ui.value );\n                      }\n                    });\n                  } );\n                  $( function() {\n                    $( "#config_pins_slider" ).slider({\n                      value: ${t.numberOfPins},\n                      min: 2,\n                      max: 5,\n                      step: 1,\n                      slide: function( event, ui ) {\n                        $( "#config_pins" ).val( ui.value );\n                        $( "#config_pins_text" ).text( ui.value );\n                      }\n                    });\n                  } );\n                  $( function() {\n                    $( "#config_guesses_slider" ).slider({\n                      value: ${t.maxAttempts},\n                      min: 2,\n                      max: 12,\n                      step: 1,\n                      slide: function( event, ui ) {\n                        $( "#config_guesses" ).val( ui.value );\n                        $( "#config_guesses_text" ).text( ui.value );\n                      }\n                    });\n                  } );\n                  <\/script>\n                </div>`}},o={wonHtml:'<div id="win-modal">\n                        <div class="title">You won!</div>\n                        <div class="content">\n                            <div class="left">\n                                Guesses:<br/>\n                                Time:<br/>\n                                Colors:<br/>\n                                Pins:<br/>\n                            </div>\n                            <div class="right">\n                                <span id="score_guesses"></span><br/>\n                                <span id="score_time"></span><br/>\n                                <span id="score_colors"></span><br/>\n                                <span id="score_pins"></span><br/>\n                            </div>\n                        </div>\n                    </div>',won:function(t,e,n,i){let s=$(".modal");s.html(this.wonHtml),$("#score_guesses").html(t),$("#score_colors").html(e),$("#score_pins").html(n),$("#score_time").html(i),s.css("display","block"),$(document).one("click",(function(t){s.css("display","none"),t.stopPropagation()}))},lostHtml:'<div id="lost-modal">\n            <div class="title">You lost!</div>\n            </div>',lost:function(){let t=$(".modal");t.html(this.lostHtml),t.css("display","block"),$(document).one("click",(function(e){t.css("display","none"),e.stopPropagation()}))},quitHtml:'<div id="quit-modal">\n            <div class="title">You quit!</div>\n            </div>',quit(){let t=$(".modal");t.html(this.quitHtml),t.css("display","block"),$(document).one("click",(function(e){t.css("display","none"),e.stopPropagation()}))}},l={helpHtml:'<div id="help-modal">\n        <p >The goal of the game is to crack the code in as few attempts as possible.\n        The code is made up of 4 colors. Each color can be used multiple times. After each guess,\n        you will get feedback in the form of black and white pins. A black pin means that you have\n        guessed a color and its position correctly. A white pin means that you have guessed a color\n        correctly, but not its position. You can use the hint button to reveal one of the colors in\n        the code. Good luck!</p>\n        </div>',show:function(){let t=$(".modal");t.html(this.helpHtml),t.css("display","block"),$(document).one("click",(function(e){t.css("display","none"),e.stopPropagation()}))}};class a{hideable={qualifier:null,show(){$(this.qualifier).removeClass("hidden")},hide(){$(this.qualifier).addClass("hidden")}};disableable={__proto__:this.hideable,qualifier:null,callable:null,active:!0,bind(t){null!==this.callable&&$(this.qualifier).off("click",this.callable),this.callable=e=>{this.active&&t(e),e.stopPropagation()},$(this.qualifier).on("click",this.callable)},enable(){this.active=!0,$(this.qualifier).removeClass("disabled")},disable(){this.active=!1,$(this.qualifier).addClass("disabled")}};secretHoles={init(t){$(".code-row").html("");for(let e=0;e<t;e++)$("<div>",{class:"code-hole"}).appendTo(".code-row")},set(t){$(".code-hole").each((function(e){$(this).data("color",t.get()[e])}))},show(){$(".code-hole").removeClass("covered").each((function(){$(this).css("background-color",$(this).data("color"))}))},hide(){$(".code-hole").addClass("covered")},hint(){if(!this.toHint())return;let t=$(".code-hole.covered"),e=Math.floor(Math.random()*t.length),n=t.eq(e);n.css("background-color",n.data("color")),n.removeClass("covered")},toHint(){return $(".code-hole.covered").length>1}};guessRow={initRows(t,e){$("#guesses").html("");for(let n=0;n<t;n++){let t=$("<div>",{class:"guess-row"}).appendTo("#guesses"),n=$("<div>",{class:"guess-holes"}).appendTo(t),i=$("<div>",{class:"feedback-holes"}).appendTo(t);for(let t=0;t<e;t++)$("<div>",{class:"guess-hole"}).appendTo(n).addClass("disabled"),$("<div>",{class:"feedback-hole"}).appendTo(i),(2===e&&0===t||3===e&&1===t||4===e&&1===t||5===e&&2===t||6===e&&2===t)&&$("<div>",{class:"feedback-spacer"}).appendTo(i)}},enableNextRow(){let t=$(".current");0===t.length?$(".guess-row:first").addClass("current"):(t.removeClass("current"),t.next().addClass("current")),this.enable()},disableActiveRow(){this.disable(),$(".current").removeClass("current")},getGuess(){return $(".current .guess-hole").map((function(){return $(this).css("background-color")})).get()},disable(){$(".current .guess-hole").off("click",i.show).addClass("disabled")},enable(){$(".current .guess-hole").on("click",i.show).removeClass("disabled")},isFilled(){return!this.getGuess().includes("rgba(0, 0, 0, 0)")},showFeedback(t,e){for(let n=$(".current .feedback-hole"),i=0;i<t+e;i++)n.eq(i).addClass(i<t?"black-feedback":"white-feedback")}};helpButton={__proto__:this.disableable,qualifier:".help-button"};hintButton={__proto__:this.disableable,qualifier:".hint-button"};checkButton={__proto__:this.disableable,qualifier:".check-button"};configButton={__proto__:this.disableable,qualifier:".config-button"};quitButton={__proto__:this.disableable,qualifier:".quit-button"};startButton={__proto__:this.disableable,qualifier:".start-button"};playingInfo={__proto__:this.hideable,qualifier:".playing",init(){$(".playing").html('Playing... <span id="seconds"></span>')}};endModal=o;configModal=s;helpModal=l;game=null;constructor(){this.helpButton.bind((()=>this.helpModal.show()))}init(t){this.game=t,i.init(this.game.getColors(),(()=>{this.guessRow.isFilled()&&this.checkButton.enable()})),this.configButton.bind((()=>this.configModal.show(this.game))),this.configButton.enable(),this.hintButton.disable(),this.quitButton.hide(),this.playingInfo.hide(),this.guessRow.initRows(this.game.maxAttempts,this.game.numberOfPins),this.secretHoles.init(this.game.numberOfPins)}setStatePlaying(t){this.secretHoles.hide(),this.guessRow.initRows(this.game.maxAttempts,this.game.numberOfPins),this.guessRow.enableNextRow(),this.startButton.hide(),this.checkButton.disable(),this.checkButton.show(),this.hintButton.enable(),this.configButton.disable(),this.quitButton.show(),this.playingInfo.init(),this.playingInfo.show(),this.secretHoles.set(t)}setStateGameOver(){this.guessRow.disableActiveRow(),this.secretHoles.show(),this.checkButton.disable(),this.checkButton.hide(),this.hintButton.disable(),this.startButton.show(),this.configButton.enable(),this.quitButton.hide(),this.playingInfo.hide()}}var c=function(){let t=[];return{get:function(){return t},set:function(t){this.code},generateSecret:function(e,n){!function(e,n){t=[];for(let i=0;i<n;i++){const n=Math.floor(Math.random()*e.length);t.push(e[n])}}(e,n)},checkGuess:function(e){return function(e){let n=0,i=0;const s=[...t],o=[...e];for(let t=0;t<e.length;t++)o[t]===s[t]&&(n++,o[t]=null,s[t]=null);for(let t=0;t<e.length;t++)if(null!==s[t])for(let n=0;n<e.length;n++)null!==o[n]&&o[n]===s[t]&&(i++,o[n]=null,s[t]=null);return[n,i]}(e)}}}();(function(){let t,n,i={numberOfColors:5,numberOfPins:4,maxAttempts:7,colors:["rgb(244, 67, 54)","rgb(233, 30, 99)","rgb(156, 39, 176)","rgb(76, 175, 80)","rgb(255, 235, 59)","rgb(121, 85, 72)","rgb(33, 150, 243)"],getColors:function(){return this.colors.slice(0,this.numberOfColors)}};var s=c;function o(){t=0,s.generateSecret(i.getColors(),i.numberOfPins),n.setStatePlaying(s),e.start("#seconds")}function l(){const o=n.guessRow.getGuess();let[l,a]=s.checkGuess(o);if(n.guessRow.showFeedback(l,a),n.guessRow.disable(),n.checkButton.disable(),t++,l===i.numberOfPins||t===i.maxAttempts)return c=l===i.numberOfPins,n.setStateGameOver(),e.stop(),void(c?n.endModal.won(t,i.numberOfColors,i.numberOfPins,e.getTime()):n.endModal.lost());var c;n.guessRow.enableNextRow()}function r(){n.secretHoles.hint(),n.secretHoles.toHint()||n.hintButton.disable()}function u(){n.setStateGameOver(),e.stop(),n.endModal.quit()}function d(){i.numberOfColors=parseInt($("#config_colors").val()),i.numberOfPins=parseInt($("#config_pins").val()),i.maxAttempts=parseInt($("#config_guesses").val()),n.init(i)}return{run:function(){n=new a,n.init(i),n.startButton.bind(o),n.checkButton.bind(l),n.hintButton.bind(r),n.quitButton.bind(u),n.configModal.bind(d)}}})().run()}(),t.p}();
//# sourceMappingURL=bundle.js.map